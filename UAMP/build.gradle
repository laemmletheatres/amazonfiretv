/**
 * Copyright 2015-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
apply plugin: 'com.android.library'

android {
    compileSdkVersion 28
    buildToolsVersion "25.0.3"

    defaultConfig {
        minSdkVersion 20
        targetSdkVersion 28
        versionCode 1
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    packagingOptions {
        pickFirst  'META-INF/LICENSE'
    }
}

apply plugin: 'jacoco'
jacoco {
    version "0.7.1.201405082137"
}

dependencies {
    api fileTree(dir: 'libs', excludes: ['exoplayer.jar'], include: ['*.jar'])

    //Selectively choose which version of exo player to implementation
    if (rootProject.hasProperty('mediaPlayerType') &&
            rootProject.mediaPlayerType.equals("externalExoPlayer")) {
        api rootProject.implementationUrl
    } else {
        api files('libs/exoplayer.jar')
    }

    api 'androidx.recyclerview:recyclerview:1.0.0'
    api 'androidx.leanback:leanback:1.0.0'
    api 'androidx.appcompat:appcompat:1.0.0'
    api 'androidx.legacy:legacy-support-v4:1.0.0'

    // Set this dependency to use JUnit 4 rules
    androidTestImplementation 'androidx.test:rules:1.1.1'

    androidTestImplementation('androidx.test.ext:junit:1.1.1') {
        exclude module: 'support-annotations'
    }

    api project(':ModuleInterface')
    api project(':ContentModel')
}
